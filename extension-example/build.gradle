import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'application'

    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

project.ext.version = '0.1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    extension {
        canBeResolved = true
        canBeConsumed = false
    }

    extension.extendsFrom(implementation)
}

dependencies {
    implementation 'org.jooq:jooq:3.11.9'

    compileOnly project(':runner')

    runtimeOnly project(':runner')

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

[run].each { runTask ->
    configure(runTask) {
        systemProperties System.properties

        if (project.hasProperty('args')) {
            args project.args.split(' ')
        }
    }
}

jar {
    from {
        configurations.extension.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task copyJar(type: Copy) {
    dependsOn jar
    outputs.dir "target/lib"

    from "$buildDir/libs"
    include "*.jar"
    into "target/lib"
}

task copyMetadata(type: Copy) {
    dependsOn jar
    outputs.dir "target"

    from "metadata.yml"
    into "target"
}

task copyDescriptor(type: Copy) {
    dependsOn jar
    outputs.dir "target"

    from "extension.yml"
    into "target"
}


task dist {
    dependsOn copyJar
    dependsOn copyMetadata
    dependsOn copyDescriptor
}
